a, b, c = None, None, None #Фишки
a1, b1, c1 = 0, 0, 0 #Счет
d = 0 #Переменная для перехода от одного игрока к другому
flag = False #Через него реализованы циклы while для проверки на занятость поля другой фишкой
s = [['0', '0', '0', '0',],
     ['0', '0', '0', '0',],
     ['0', '0', '0', '0',],     #Массив для визуального представления результатов
     ['0', '0', '0', '0',],
     ['0', '0', '0', '0']]
s1 = [['0', '0', '0', '0', '0', '0'],
     ['0', '0', '0', '0', '0', '0'],
     ['0', '0', '0', '0', '0', '0'],
     ['0', '0', '0', '0', '0', '0'],   #Массив для проверок условий
     ['0', '0', '0', '0', '0', '0'],
     ['0', '0', '0', '0', '0', '0'],
     ['0', '0', '0', '0', '0', '0']]
print('Использовать 0 как символ для игры запрещено')
print('За ход принимает ввод координат поля, которое занял игрок')
print('Координатый вводятся через пробел, сначало номер строки, потом номер столбца')



while a == b or b == c or a == c:
    print('Введите желаемый символ для игры')
    a = input()
    print('Введите желаемый символ для игры')                #Ввод данных для начала игры
    b = input()
    print('Введите желаемый символ для игры')
    c = input()
    if a == b or b == c or a == c or a == '0' or b == '0' or c == '0':
        print('ERROR')

#Начало игры
print('Начнем игру')
while '0' in s[0] or '0' in s[1] or '0' in s[2] or '0' in s[3] or '0' in s[4]:
    if d == 0:
        print('Первый игрок, сделайте ход')
        while flag == False:
            g = input()
            t = g.split()
            t = [int(t[0]), int(t[1])]
            if s[t[0] - 1][t[1] - 1] != '0':   #Проверка, не занято ли поле другйо фишкой
                print('Это поле уже занято')
            else:
                #Проверка на соседство новой фишки с предыдущими себеподобными
                s[t[0] - 1][t[1] - 1] = a
                s1[t[0]][t[1]] = a
                if s1[t[0] - 1][t[1]] == a or s1[t[0]][t[1] - 1] == a or s1[t[0] - 1][t[1] -1] == a or \
                    s1[t[0] + 1][t[1]] == a or s1[t[0]][t[1] + 1] == a or s1[t[0] + 1][t[1] + 1] == a   \
                    or s1[t[0] - 1][t[1] + 1] == a or s1[t[0] + 1][t[1] - 1] == a:
                    a1 -= 1
                print(s)
                d = 1
                break
    elif d == 1:
        print('Второй игрок, сделайте ход')
        while flag == False:
            g = input()
            t = g.split()
            t = [int(t[0]), int(t[1])]
            if s[t[0] - 1][t[1] - 1] != '0':  #Проверка, не занято ли поле другйо фишкой
                print('Это поле уже занято')
            else:
                # Проверка на соседство новой фишки с предыдущими себеподобными
                s[t[0] - 1][t[1] - 1] = b
                s1[t[0]][t[1]] = b
                if s1[t[0] - 1][t[1]] == b or s1[t[0]][t[1] - 1] == b or s1[t[0] - 1][t[1] - 1] == b or \
                        s1[t[0] + 1][t[1]] == b or s1[t[0]][t[1] + 1] == b or s1[t[0] + 1][t[1] + 1] == b \
                        or s1[t[0] - 1][t[1] + 1] == b or s1[t[0] + 1][t[1] - 1] == b:
                    b1 -= 1
                print(s)
                d = 2
                break
    elif d == 2:
        print('Третий игрок, сделайте ход')
        while flag == False:
            g = input()
            t = g.split()
            t = [int(t[0]), int(t[1])]
            if s[t[0] - 1][t[1] - 1] != '0': #Проверка, не занято ли поле другйо фишкой
                print('Это поле уже занято')
            else:
                # Проверка на соседство новой фишки с предыдущими себеподобными
                s[t[0] - 1][t[1] - 1] = c
                s1[t[0]][t[1]] = c
                if s1[t[0] - 1][t[1]] == c or s1[t[0]][t[1] - 1] == c or s1[t[0] - 1][t[1] - 1] == c or \
                        s1[t[0] + 1][t[1]] == c or s1[t[0]][t[1] + 1] == c or s1[t[0] + 1][t[1] + 1] == c \
                        or s1[t[0] - 1][t[1] + 1] == c or s1[t[0] + 1][t[1] - 1] == c:
                    c1 -= 1
                print(s)
                d = 0
                break


#Результаты
if max(a1, b1, c1) == a1:
    print('Поздравляем Первого игрока с победой!')
if max(a1, b1, c1) == b1:
    print('Поздравляем Второго игрока с победой!')
if max(a1, b1, c1) == c1:
    print('Поздравляем Третьего игрока с победой!')
